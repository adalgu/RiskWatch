services:
  # dev:
  #   build:
  #     context: .
  #     dockerfile: .devcontainer/Dockerfile
  #   volumes:
  #     - .:/workspace
  #   environment:
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
  #     - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/news_db
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_started
  #   network_mode: service:selenium-hub

  selenium-hub:
    image: seleniarm/hub:latest
    ports:
      - "4444:4444"

  chrome:
    image: seleniarm/node-chromium:latest
    shm_size: "2g" # Add shared memory size
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=5
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    ports:
      - "5900:5900"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=news_db  # 여기서 데이터베이스를 지정합니다
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      # test: ["CMD-SHELL", "pg_isready -U postgres"] #pg_isready -d news_db는 news_db 데이터베이스가 존재하지 않을 경우 실패합니다. 초기화가 진행 중일 때도 실패할 수 있으므로 pg_isready 명령을 기본값으로 수정하세요:
      test: ["CMD-SHELL", "pg_isready -U postgres -d news_db"] 
      interval: 5s
      timeout: 5s
      retries: 5

  news_storage:
    build:
      context: .
      dockerfile: news_storage/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      selenium-hub:
        condition: service_started
      chrome:
        condition: service_started
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/news_db
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
    volumes:
      - .:/app
    command: python -m news_storage.consumer
    ports:
      - "8000:8000"

  news_ui:
    build:
      context: ./news_collector/ui
      dockerfile: Dockerfile
    ports:
      - "8501:8501" # Streamlit default port
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/news_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      selenium-hub:
        condition: service_started
    volumes:
      - ./news_collector/ui:/app

  news_data_dashboard:
    build:
      context: .
      dockerfile: news_storage/web_ui/Dockerfile
    ports:
      - "5050:5000" # Changed host port to 5050
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/news_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./news_storage:/app/news_storage

volumes:
  postgres_data:
