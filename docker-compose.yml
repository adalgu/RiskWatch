services:
  fast_api:
    build:
      context: ./news_collector/fast_api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - SELENIUM_GRID_NODES=4
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/news_db
      - PYTHONPATH=/app:/app/news_collector
      - TZ=Asia/Seoul
    env_file:
      - .env
    volumes:
      - ./news_collector:/app/news_collector
      - ./news_collector/fast_api:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      chrome:
        condition: service_healthy
    networks:
      - collector_network

  collector_worker:
    build:
      context: ./news_collector/fast_api
      dockerfile: Dockerfile.worker
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/news_db
      - PYTHONPATH=/app:/app/news_collector
      - LOG_LEVEL=DEBUG
      - TZ=Asia/Seoul
    env_file:
      - .env
    volumes:
      - ./news_collector:/app/news_collector
      - ./news_collector/fast_api:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      chrome:
        condition: service_healthy
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    networks:
      - collector_network

  jupyter:
    image: jupyter/minimal-notebook:latest
    ports:
      - "8888:8888"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/news_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - JUPYTER_ENABLE_LAB=yes
      - NOTEBOOK_DIR=/home/jovyan/notebook
      - TZ=Asia/Seoul
    volumes:
      - ./scripts/notebook:/home/jovyan/notebook
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    working_dir: /home/jovyan/notebook
    networks:
      - collector_network
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.notebook_dir='/home/jovyan/notebook'

  selenium-hub:
    image: seleniarm/hub:latest
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    environment:
      - TZ=Asia/Seoul
      - SE_SESSION_REQUEST_TIMEOUT=600
      - SE_SESSION_RETRY_INTERVAL=30
      - SE_NODE_SESSION_TIMEOUT=600
      - GRID_TIMEOUT=600
      - GRID_BROWSER_TIMEOUT=600
      - GRID_MAX_SESSION=3  # 동시 세션 수
      - SE_NODE_MAX_SESSIONS=10  # 노드당 최대 세션 수
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true  # 최대 세션 수 오버라이드 허용
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - collector_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/wd/hub/status"]
      interval: 10s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  chrome:
    image: seleniarm/node-chromium:latest
    shm_size: "2g"
    depends_on:
      selenium-hub:
        condition: service_healthy
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=10
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_SESSION_TIMEOUT=600
      - SE_SESSION_REQUEST_TIMEOUT=600
      - TZ=Asia/Seoul
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "5900:5900"
    networks:
      - collector_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://selenium-hub:4444/wd/hub/status"]
      interval: 10s
      timeout: 10s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK_ABSOLUTE=1073741824
      - TZ=Asia/Seoul
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - collector_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=news_db
      - TZ=Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d news_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - collector_network

  news_storage:
    build:
      context: ./news_storage/
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      chrome:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/news_db
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
      - PYTHONPATH=/app:/app/news_collector:/app/news_storage:/app/scripts
      - TZ=Asia/Seoul
    volumes:
      - ./news_storage:/app/news_storage
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./common:/app/common
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - "8001:8000"
    networks:
      - collector_network

  news_ui:
    build:
      context: .
      dockerfile: news_visualizer/news_ui/Dockerfile
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/news_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - SELENIUM_HUB_URL=http://selenium-hub:4444/wd/hub
      - PYTHONPATH=/app
      - TZ=Asia/Seoul
    volumes:
      - ./news_visualizer/news_ui:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      chrome:
        condition: service_healthy
    networks:
      - collector_network

  seoul_metro:
    build:
      context: ./seoul-metro-openapi
      dockerfile: Dockerfile
    ports:
      - "8502:8502"
    environment:
      - TZ=Asia/Seoul
    volumes:
      - ./seoul-metro-openapi:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - collector_network

volumes:
  postgres_data:
    external: true
  rabbitmq_data:
    external: false

networks:
  collector_network:
    driver: bridge
  bridge:
    external: true
