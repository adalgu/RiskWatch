"""update_comment_and_stats_models

Revision ID: 99b95b58f884
Revises: 664dcaa245dc
Create Date: 2024-11-27 08:07:01.519200

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '99b95b58f884'
down_revision = '664dcaa245dc'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comment_stats', sa.Column('total_count', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('current_count', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('deleted_count', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('user_deleted_count', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('admin_deleted_count', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('auto_deleted_count', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('gender_ratio', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('male_ratio', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('female_ratio', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('age_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('age_10s', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('age_20s', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('age_30s', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('age_40s', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('age_50s', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('age_60s_above', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('likes_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('replies_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('avg_likes_per_comment', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('avg_replies_per_comment', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('hourly_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('daily_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('peak_hours', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('unique_users', sa.Integer(), nullable=True))
    op.add_column('comment_stats', sa.Column('user_participation', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('repeat_commenter_ratio', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('avg_comment_length', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('quality_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('spam_ratio', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('sentiment_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('comment_stats', sa.Column('controversy_score', sa.Float(), nullable=True))
    op.add_column('comment_stats', sa.Column('collection_metadata', sa.JSON(), nullable=True))
    op.add_column('comment_stats', sa.Column('is_complete', sa.Boolean(), nullable=True))
    op.add_column('comment_stats', sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True))
    op.add_column('comments', sa.Column('author', sa.String(), nullable=True))
    op.add_column('comments', sa.Column('profile_url', sa.String(), nullable=True))
    op.add_column('comments', sa.Column('likes', sa.Integer(), nullable=True))
    op.add_column('comments', sa.Column('dislikes', sa.Integer(), nullable=True))
    op.add_column('comments', sa.Column('reply_count', sa.Integer(), nullable=True))
    op.add_column('comments', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.add_column('comments', sa.Column('delete_type', sa.String(), nullable=True))
    op.drop_column('comments', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('comments', 'delete_type')
    op.drop_column('comments', 'is_deleted')
    op.drop_column('comments', 'reply_count')
    op.drop_column('comments', 'dislikes')
    op.drop_column('comments', 'likes')
    op.drop_column('comments', 'profile_url')
    op.drop_column('comments', 'author')
    op.drop_column('comment_stats', 'last_updated')
    op.drop_column('comment_stats', 'is_complete')
    op.drop_column('comment_stats', 'collection_metadata')
    op.drop_column('comment_stats', 'controversy_score')
    op.drop_column('comment_stats', 'sentiment_distribution')
    op.drop_column('comment_stats', 'spam_ratio')
    op.drop_column('comment_stats', 'quality_metrics')
    op.drop_column('comment_stats', 'avg_comment_length')
    op.drop_column('comment_stats', 'repeat_commenter_ratio')
    op.drop_column('comment_stats', 'user_participation')
    op.drop_column('comment_stats', 'unique_users')
    op.drop_column('comment_stats', 'peak_hours')
    op.drop_column('comment_stats', 'daily_distribution')
    op.drop_column('comment_stats', 'hourly_distribution')
    op.drop_column('comment_stats', 'avg_replies_per_comment')
    op.drop_column('comment_stats', 'avg_likes_per_comment')
    op.drop_column('comment_stats', 'replies_distribution')
    op.drop_column('comment_stats', 'likes_distribution')
    op.drop_column('comment_stats', 'age_60s_above')
    op.drop_column('comment_stats', 'age_50s')
    op.drop_column('comment_stats', 'age_40s')
    op.drop_column('comment_stats', 'age_30s')
    op.drop_column('comment_stats', 'age_20s')
    op.drop_column('comment_stats', 'age_10s')
    op.drop_column('comment_stats', 'age_distribution')
    op.drop_column('comment_stats', 'female_ratio')
    op.drop_column('comment_stats', 'male_ratio')
    op.drop_column('comment_stats', 'gender_ratio')
    op.drop_column('comment_stats', 'auto_deleted_count')
    op.drop_column('comment_stats', 'admin_deleted_count')
    op.drop_column('comment_stats', 'user_deleted_count')
    op.drop_column('comment_stats', 'deleted_count')
    op.drop_column('comment_stats', 'current_count')
    op.drop_column('comment_stats', 'total_count')
    # ### end Alembic commands ###
