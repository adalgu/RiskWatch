"""migrate_to_sqlmodel

Revision ID: ae91aef596e7
Revises: 
Create Date: 2024-12-04 12:58:52.532961

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ae91aef596e7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('main_keyword', sa.String(), nullable=False),
    sa.Column('naver_link', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('original_link', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('publisher_domain', sa.String(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('published_date', sa.String(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.Column('is_naver_news', sa.Boolean(), nullable=True),
    sa.Column('is_test', sa.Boolean(), nullable=False),
    sa.Column('is_api_collection', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('main_keyword', 'naver_link', name='uq_main_keyword_naver_link')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('comment_no', sa.String(), nullable=True),
    sa.Column('parent_comment_no', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('profile_url', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('dislikes', sa.Integer(), nullable=False),
    sa.Column('reply_count', sa.Integer(), nullable=False),
    sa.Column('is_reply', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('delete_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('article_id')
    )
    op.create_table('comment_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('dislikes', sa.Integer(), nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=False),
    sa.Column('current_count', sa.Integer(), nullable=True),
    sa.Column('deleted_count', sa.Integer(), nullable=False),
    sa.Column('user_deleted_count', sa.Integer(), nullable=True),
    sa.Column('admin_deleted_count', sa.Integer(), nullable=True),
    sa.Column('auto_deleted_count', sa.Integer(), nullable=True),
    sa.Column('gender_ratio', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('male_ratio', sa.Float(), nullable=True),
    sa.Column('female_ratio', sa.Float(), nullable=True),
    sa.Column('age_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('age_10s', sa.Float(), nullable=True),
    sa.Column('age_20s', sa.Float(), nullable=True),
    sa.Column('age_30s', sa.Float(), nullable=True),
    sa.Column('age_40s', sa.Float(), nullable=True),
    sa.Column('age_50s', sa.Float(), nullable=True),
    sa.Column('age_60s_above', sa.Float(), nullable=True),
    sa.Column('likes_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('replies_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('avg_likes_per_comment', sa.Float(), nullable=True),
    sa.Column('avg_replies_per_comment', sa.Float(), nullable=True),
    sa.Column('hourly_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('daily_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('peak_hours', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('unique_users', sa.Integer(), nullable=True),
    sa.Column('user_participation', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('repeat_commenter_ratio', sa.Float(), nullable=True),
    sa.Column('avg_comment_length', sa.Float(), nullable=True),
    sa.Column('quality_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('spam_ratio', sa.Float(), nullable=True),
    sa.Column('sentiment_distribution', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('controversy_score', sa.Float(), nullable=True),
    sa.Column('collection_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_complete', sa.Boolean(), nullable=False),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('comment_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_stats')
    op.drop_table('contents')
    op.drop_table('comments')
    op.drop_table('articles')
    # ### end Alembic commands ###
